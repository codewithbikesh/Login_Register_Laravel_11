                 <!-- How to create login page or register authentication in laravel 11 project  -->

     1) uncomment this line for database from .env file and change the name of the database as well as database engine name

     2) Add role in users table from migration file 
         (read me : add this line of code after password column in users table)
         $table->enum('role',['customer','admin'])->default('customer');
 
     3) php artisan migrate to database from migration file
        Run this command: php artisan migrate 

     4) Add guards and providers in auth.php
       


    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
        'admin' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'admins',
        ],
    ],


  'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\User::class),
        ],
        'admins' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\User::class),
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

  5) To make middleware AdminRedirect 
     Run this command: php artisan make:middleware AdminRedirect 
     Run this command: php artisan make:middleware AdminAuthenticate 
 

  6)  To make Controller for Login 
      Run this command: php artisan make:controller LoginController 


   7) To make View files for login 
      Run this command: php artisan make:view account\login


   8) To make View files for login 
   Run this command: php artisan make:view account\dashboard

   
  9)  To make Controller for Login 
      Run this command: php artisan make:controller DashboardController 


  10) To make View files for login 
   Run this command: php artisan make:view account\register

 11) To add the entire guest route into guest middleware or auth middleware into a auth route 


 Route::group(['prefix' => 'account'] , function(){
 
 Route::group(['middleware' =>'guest'], function(){
     Route::get('/account/login', [LoginController::class,'index'])->name('account.login');
     Route::get('/account/register', [LoginController::class,'register'])->name('account.register');
     Route::post('/account/process-register', [LoginController::class,'processRegister'])->name('account.processRegister');
     Route::post('/account/authenticate', [LoginController::class,'authenticate'])->name('account.authenticate');
 });

 Route::group(['middleware' => 'auth'], function(){

     Route::get('/account/logout', [LoginController::class,'logout'])->name('account.logout');
     Route::get('/account/dashboard', [DashboardController::class,'dashboard'])->name('account.dashboard');
 });
});

12) after doing these things we have to add middleware path in bootstrap/app.php file 

   $middleware->redirectTo(
    guests: '/account/login',
    users: '/account/dashboard',
   );


add like this:-

use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware) {
        <!-- add the middleware redirect method overhere -->
        $middleware->redirectTo(
            guests: '/account/login',
            users: '/account/dashboard'
           );        
    })
    ->withExceptions(function (Exceptions $exceptions) {
        //
    })->create();


<!-- From here we have know how to create admin authentication routes -->

13) To amke admin login Controller 
  Run this command:  php artisan make:controller admin\LoginController



14) To create admin login view file 
    Run this command: php artisan make:view admin\login
    

<!-- 15)    To add the entire guest route into guest middleware or auth middleware into a auth route  -->


Route::group(['prefix' => 'admin'], function(){

Route::group(['middleware' => 'guest'], function(){
Route::get('/admin/login',[AdminLoginController::class,'index'])->name('admin.login');
Route::post('admin/authenticate',[AdminLoginController::class,'authenticate'])->name('admin.authenticate');
});

Route::group(['middleware'=> 'auth'], function(){
Route::get('admin/dashboard',[AdminDashboardController::class,'dashboard'])->name('admin.dashboard');
Route::get('admin/logout', [AdminLoginController::class,'logout'])->name('admin.logout');
});

});


<!-- 16) To check the admin routes is correct or not into Middleware/AdminRedirect.php  -->

if(Auth::guard('admin')->check()){
            return redirect()->route('admin.dashboard');
      }

      add these code like this :

<!-- ------------------------------------------------------- -->
      namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class AdminRedirect
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
      if(Auth::guard('admin')->check()){
            return redirect()->route('admin.dashboard');
      }

        return $next($request);
    }
}
  
<!-- --------------------------------------------------------------------------- -->


<!-- After that you need to add these code into bootstrap/app.php file  -->


$middleware->alias([
  'admin.guest' => \App\Http\Middleware\AdminRedirect::class,
  'admin.auth' =>  \App\Http\Middleware\AdminAuthenticate::class,
]);

<!-- 17) To check the admin routes is correct or not into Middleware/AdminAuthenticate.php  -->


if(!Auth::guard('admin')->check()){
            return redirect()->route('admin.login');
      }

      add these code like this :

<!-- ------------------------------------------------------- -->
      namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class AdminRedirect
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
      if(!Auth::guard('admin')->check()){
            return redirect()->route('admin.login');
      }

        return $next($request);
    }
}
  



     ----------------------------------------------
     Laravel 11 Multi Authentication :-
     ----------------------------------------------

     1. php version => 8.2
     2. Composer
     3. Download Laravel 
     4. composer create-project laravel/laravel:^11.0 laravel-multi-authentication
     5. Add guards and providers in auth.php
     6. Create middlewares for guest and authenticated routes for admin 
     7. Register middlewares in bootstrap/app.php
     8. Write custom Authentication for Admin and Normal user

     Take a reference from this video
     https://www.youtube.com/watch?v=jG5TlWtnG3A&t=1947s

